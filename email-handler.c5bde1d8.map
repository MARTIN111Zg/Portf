{"version":3,"sources":["js\\email-handler.js"],"names":["validEmail","email","re","test","validateHuman","honeypot","console","log","getFormData","form","document","getElementById","elements","fields","Object","keys","filter","k","name","map","undefined","length","item","pos","self","indexOf","data","forEach","value","str","type","checked","slice","i","formDataNameOrder","JSON","stringify","formGoogleSheetName","dataset","sheet","formGoogleSendEmail","handleFormSubmit","event","preventDefault","style","display","url","target","action","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","status","statusText","responseText","encoded","encodeURIComponent","join","send","loaded","addEventListener"],"mappings":"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","file":"email-handler.c5bde1d8.map","sourcesContent":["\nfunction validEmail(email) { // see:\n  var re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n  return re.test(email);\n}\n\nfunction validateHuman(honeypot) {\n  if (honeypot) {  //if hidden form filled up\n    console.log(\"Robot Detected!\");\n    return true;\n  } else {\n    console.log(\"Welcome Human!\");\n  }\n}\n\n// get all data in form and return object\nfunction getFormData() {\n  var form = document.getElementById(\"gform\");\n  var elements = form.elements; // all form elements\n  var fields = Object.keys(elements).filter(function(k) {\n        // the filtering logic is simple, only keep fields that are not the honeypot\n        return (elements[k].name !== \"honeypot\");\n  }).map(function(k) {\n    if(elements[k].name !== undefined) {\n      return elements[k].name;\n    // special case for Edge's html collection\n    }else if(elements[k].length > 0){\n      return elements[k].item(0).name;\n    }\n  }).filter(function(item, pos, self) {\n    return self.indexOf(item) == pos && item;\n  });\n  var data = {};\n  fields.forEach(function(k){\n    data[k] = elements[k].value;\n    var str = \"\"; // declare empty string outside of loop to allow\n                  // it to be appended to for each item in the loop\n    if(elements[k].type === \"checkbox\"){ // special case for Edge's html collection\n      str = str + elements[k].checked + \", \"; // take the string and append\n                                              // the current checked value to\n                                              // the end of it, along with\n                                              // a comma and a space\n      data[k] = str.slice(0, -2); // remove the last comma and space\n                                  // from the  string to make the output\n                                  // prettier in the spreadsheet\n    }else if(elements[k].length){\n      for(var i = 0; i < elements[k].length; i++){\n        if(elements[k].item(i).checked){\n          str = str + elements[k].item(i).value + \", \"; // same as above\n          data[k] = str.slice(0, -2);\n        }\n      }\n    }\n  });\n\n  // add form-specific values into the data\n  data.formDataNameOrder = JSON.stringify(fields);\n  data.formGoogleSheetName = form.dataset.sheet || \"responses\"; // default sheet name\n  data.formGoogleSendEmail = form.dataset.email || \"\"; // no email by default\n\n  console.log(data);\n  return data;\n}\n\nfunction handleFormSubmit(event) {  // handles form submit withtout any jquery\n  event.preventDefault();           // we are submitting via xhr below\n  var data = getFormData();         // get the values submitted in the form\n\n  /* OPTION: Remove this comment to enable SPAM prevention, see README.md\n  if (validateHuman(data.honeypot)) {  //if form is filled, form will not be submitted\n    return false;\n  }\n  */\n\n  if( !validEmail(data.email) ) {   // if email is not valid show error\n    document.getElementById(\"email-invalid\").style.display = \"block\";\n    return false;\n  } else {\n    var url = event.target.action;  //\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', url);\n    // xhr.withCredentials = true;\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    xhr.onreadystatechange = function() {\n        console.log( xhr.status, xhr.statusText )\n        console.log(xhr.responseText);\n      document.getElementById(\"name\").style.display = \"none\";\n      document.getElementById(\"email\").style.display = \"none\";\n      document.getElementById(\"message\").style.display = \"none\";\n      document.getElementById(\"1\").style.display = \"none\";\n        document.getElementById(\"thankyou_message\").style.display = \"block\";\n        return;\n    };\n    // url encode form data for sending as post data\n    var encoded = Object.keys(data).map(function(k) {\n        return encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k])\n    }).join('&')\n    xhr.send(encoded);\n  }\n}\nfunction loaded() {\n  console.log(\"Contact form submission handler loaded successfully.\");\n  // bind to the submit event of our form\n  var form = document.getElementById(\"gform\");\n  form.addEventListener(\"submit\", handleFormSubmit, false);\n};\ndocument.addEventListener(\"DOMContentLoaded\", loaded, false);\n"]}